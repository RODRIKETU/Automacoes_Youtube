{
	"info": {
		"_postman_id": "youtube-automation-api",
		"name": "YouTube Automation API",
		"description": "Collection completa da API do YouTube Automation System",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "youtube-automation"
	},
	"item": [
		{
			"name": "üìä Estat√≠sticas e Monitoramento",
			"item": [
				{
					"name": "Obter Estat√≠sticas Completas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code √© 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Resposta cont√©m dados\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('success');",
									"    pm.expect(jsonData).to.have.property('data');",
									"});",
									"",
									"pm.test(\"Dados de estat√≠sticas v√°lidos\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.have.property('geral');",
									"    pm.expect(jsonData.data).to.have.property('por_tema');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/stats",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"stats"
							]
						},
						"description": "Retorna estat√≠sticas completas do sistema incluindo:\n- M√©tricas gerais dos projetos\n- Estat√≠sticas por tema\n- Dados di√°rios\n- Informa√ß√µes de arquivos\n- Logs de erro recentes"
					},
					"response": [
						{
							"name": "Sucesso - Estat√≠sticas Completas",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/stats",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"stats"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"geral\": {\n      \"total_projetos\": 15,\n      \"concluidos\": 12,\n      \"com_erro\": 2,\n      \"publicados\": 10,\n      \"em_andamento\": 1,\n      \"tempo_medio_processamento\": \"8.5 minutos\"\n    },\n    \"por_tema\": [\n      {\n        \"tema\": \"Contos de Terror Urbano\",\n        \"cor\": \"#800020\",\n        \"total_videos\": 5,\n        \"videos_publicados\": 4,\n        \"videos_concluidos\": 5,\n        \"videos_erro\": 0\n      }\n    ],\n    \"por_dia\": [],\n    \"arquivos\": [],\n    \"erros_recentes\": [],\n    \"periodo\": \"30 dias\",\n    \"atualizado_em\": \"2025-08-20T21:30:00Z\"\n  }\n}"
						}
					]
				},
				{
					"name": "Listar Logs do Sistema",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code √© 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Resposta √© um array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/logs?limit={{log_limit}}&level={{log_level}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"logs"
							],
							"query": [
								{
									"key": "limit",
									"value": "{{log_limit}}",
									"description": "N√∫mero m√°ximo de logs (padr√£o: 50)"
								},
								{
									"key": "level",
									"value": "{{log_level}}",
									"description": "N√≠vel do log: error, warning, info, all"
								},
								{
									"key": "projeto_id",
									"value": "{{projeto_id}}",
									"description": "Filtrar por projeto espec√≠fico",
									"disabled": true
								}
							]
						},
						"description": "Retorna logs do sistema com filtros opcionais por n√≠vel e quantidade."
					},
					"response": []
				}
			],
			"description": "Endpoints relacionados ao monitoramento e estat√≠sticas do sistema"
		},
		{
			"name": "üé¨ Gest√£o de Temas",
			"item": [
				{
					"name": "Listar Todos os Temas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code √© 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Retorna lista de temas\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.be.an('array');",
									"});",
									"",
									"pm.test(\"Cada tema tem propriedades obrigat√≥rias\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.data.length > 0) {",
									"        pm.expect(jsonData.data[0]).to.have.property('id');",
									"        pm.expect(jsonData.data[0]).to.have.property('nome');",
									"        pm.expect(jsonData.data[0]).to.have.property('descricao');",
									"    }",
									"});",
									"",
									"// Salvar primeiro tema para usar em outros requests",
									"if (pm.response.json().data.length > 0) {",
									"    pm.environment.set('primeiro_tema_id', pm.response.json().data[0].id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/themes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"themes"
							]
						},
						"description": "Retorna todos os temas dispon√≠veis para cria√ß√£o de v√≠deos, incluindo:\n- ID √∫nico do tema\n- Nome e descri√ß√£o\n- Cor tem√°tica\n- √çcone\n- Tags associadas"
					},
					"response": [
						{
							"name": "Sucesso - Lista de Temas",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/themes",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"themes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"nome\": \"Contos de Terror Urbano\",\n      \"descricao\": \"Hist√≥rias assombradas em cen√°rios urbanos modernos\",\n      \"cor\": \"#800020\",\n      \"icone\": \"building\",\n      \"tags\": [\"terror\", \"urbano\", \"suspense\", \"mist√©rio\"]\n    },\n    {\n      \"id\": 2,\n      \"nome\": \"Vida Selvagem Extrema\",\n      \"descricao\": \"Document√°rios sobre animais em situa√ß√µes extremas\",\n      \"cor\": \"#228B22\",\n      \"icone\": \"leaf\",\n      \"tags\": [\"natureza\", \"animais\", \"document√°rio\"]\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Obter Tema Espec√≠fico",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/themes/{{tema_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"themes",
								"{{tema_id}}"
							]
						},
						"description": "Retorna informa√ß√µes detalhadas de um tema espec√≠fico."
					},
					"response": []
				}
			],
			"description": "Endpoints para gerenciamento e consulta de temas dispon√≠veis"
		},
		{
			"name": "üé• Gest√£o de Projetos",
			"item": [
				{
					"name": "Criar Novo Projeto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code √© 200 ou 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Projeto criado com sucesso\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data).to.have.property('projeto_id');",
									"});",
									"",
									"// Salvar projeto_id para usar em outros requests",
									"if (pm.response.json().success) {",
									"    pm.environment.set('projeto_id', pm.response.json().data.projeto_id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tema_id\": {{primeiro_tema_id}},\n  \"titulo_personalizado\": \"Meu V√≠deo de Teste via API\",\n  \"configuracoes\": {\n    \"duracao_maxima\": 600,\n    \"qualidade\": \"HD\",\n    \"incluir_legenda\": true\n  }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/projects",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"projects"
							]
						},
						"description": "Cria um novo projeto de v√≠deo com o tema especificado. Par√¢metros:\n- tema_id (obrigat√≥rio): ID do tema selecionado\n- titulo_personalizado (opcional): T√≠tulo customizado\n- configuracoes (opcional): Configura√ß√µes adicionais"
					},
					"response": [
						{
							"name": "Sucesso - Projeto Criado",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tema_id\": 1,\n  \"titulo_personalizado\": \"Meu V√≠deo √âpico\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/projects",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"projects"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"projeto_id\": \"proj_abc123def456\",\n    \"status\": \"iniciado\",\n    \"tema\": \"Contos de Terror Urbano\",\n    \"titulo\": \"Meu V√≠deo √âpico\",\n    \"created_at\": \"2025-08-20T21:30:00Z\",\n    \"estimativa_conclusao\": \"2025-08-20T21:40:00Z\"\n  },\n  \"message\": \"Projeto criado com sucesso e enviado para processamento\"\n}"
						}
					]
				},
				{
					"name": "Consultar Status do Projeto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code √© 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Resposta cont√©m status do projeto\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.have.property('status');",
									"    pm.expect(jsonData.data).to.have.property('progresso');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/projects/{{projeto_id}}/status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"projects",
								"{{projeto_id}}",
								"status"
							]
						},
						"description": "Consulta o status atual de um projeto espec√≠fico, incluindo:\n- Status atual (iniciado, processando, conclu√≠do, erro)\n- Porcentagem de progresso\n- Etapa atual do processamento\n- Tempo estimado para conclus√£o\n- Lista de arquivos j√° gerados"
					},
					"response": [
						{
							"name": "Sucesso - Status do Projeto",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/projects/proj_abc123def456/status",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"projects",
										"proj_abc123def456",
										"status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"projeto_id\": \"proj_abc123def456\",\n    \"status\": \"processando\",\n    \"progresso\": 65,\n    \"etapa_atual\": \"gerando_audio\",\n    \"tempo_estimado\": \"3 minutos\",\n    \"created_at\": \"2025-08-20T21:30:00Z\",\n    \"updated_at\": \"2025-08-20T21:35:00Z\",\n    \"arquivos_gerados\": [\n      {\n        \"nome\": \"script.txt\",\n        \"tamanho\": \"2.1 KB\",\n        \"tipo\": \"texto\"\n      },\n      {\n        \"nome\": \"audio.mp3\",\n        \"tamanho\": \"1.2 MB\",\n        \"tipo\": \"audio\"\n      }\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Listar Todos os Projetos",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/projects?status={{projeto_status}}&limit={{projeto_limit}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"projects"
							],
							"query": [
								{
									"key": "status",
									"value": "{{projeto_status}}",
									"description": "Filtrar por status: iniciado, processando, concluido, erro"
								},
								{
									"key": "limit",
									"value": "{{projeto_limit}}",
									"description": "N√∫mero m√°ximo de projetos"
								},
								{
									"key": "tema_id",
									"value": "{{tema_id}}",
									"description": "Filtrar por tema espec√≠fico",
									"disabled": true
								}
							]
						},
						"description": "Lista todos os projetos com filtros opcionais por status e tema."
					},
					"response": []
				},
				{
					"name": "Cancelar Projeto",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/projects/{{projeto_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"projects",
								"{{projeto_id}}"
							]
						},
						"description": "Cancela um projeto em andamento."
					},
					"response": []
				}
			],
			"description": "Endpoints para cria√ß√£o, monitoramento e gest√£o de projetos de v√≠deo"
		},
		{
			"name": "üìÅ Gest√£o de Arquivos",
			"item": [
				{
					"name": "Listar Arquivos do Projeto",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/projects/{{projeto_id}}/files",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"projects",
								"{{projeto_id}}",
								"files"
							]
						},
						"description": "Lista todos os arquivos gerados para um projeto espec√≠fico."
					},
					"response": []
				},
				{
					"name": "Download de Arquivo",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/projects/{{projeto_id}}/files/{{file_id}}/download",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"projects",
								"{{projeto_id}}",
								"files",
								"{{file_id}}",
								"download"
							]
						},
						"description": "Faz download de um arquivo espec√≠fico do projeto."
					},
					"response": []
				}
			],
			"description": "Endpoints para gest√£o de arquivos gerados pelos projetos"
		},
		{
			"name": "üîß Utilit√°rios",
			"item": [
				{
					"name": "Health Check",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"API est√° online\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Resposta cont√©m status\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('status');",
									"    pm.expect(jsonData.status).to.equal('ok');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"health"
							]
						},
						"description": "Verifica se a API est√° funcionando corretamente."
					},
					"response": [
						{
							"name": "API Online",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/health",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"health"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"ok\",\n  \"timestamp\": \"2025-08-20T21:30:00Z\",\n  \"version\": \"1.0.0\",\n  \"services\": {\n    \"database\": \"connected\",\n    \"n8n\": \"running\",\n    \"storage\": \"available\"\n  }\n}"
						}
					]
				},
				{
					"name": "Informa√ß√µes da API",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/info",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"info"
							]
						},
						"description": "Retorna informa√ß√µes sobre a vers√£o e capacidades da API."
					},
					"response": []
				}
			],
			"description": "Endpoints utilit√°rios para monitoramento e informa√ß√µes da API"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Configura√ß√£o autom√°tica de vari√°veis",
					"if (!pm.environment.get('base_url')) {",
					"    pm.environment.set('base_url', 'http://localhost:3000');",
					"}",
					"",
					"// Timestamp para requests",
					"pm.environment.set('timestamp', new Date().toISOString());"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Testes globais para todas as requisi√ß√µes",
					"pm.test(\"Tempo de resposta √© aceit√°vel\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(5000);",
					"});",
					"",
					"pm.test(\"Content-Type √© JSON\", function () {",
					"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "api_version",
			"value": "v1",
			"type": "string"
		},
		{
			"key": "collection_version",
			"value": "1.0.0",
			"type": "string"
		}
	]
}
